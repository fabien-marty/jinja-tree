#############################
### General configuration ###
#############################
# (Note: all values here are the default values)

[general]

# Search paths to jinja"
extra_search_paths = []

# Add root dir to search path (if true)
add_root_dir_to_search_path = {{ default_config.add_root_dir_to_search_path|lower }}

# Add current working dir (CWD at script start) to search path (if true)
add_cwd_to_search_path = {{ default_config.add_cwd_to_search_path|lower }}

# Add processed file dir to search path (if true)
add_processed_file_dir_to_search_path = {{ default_config.add_processed_file_dir_to_search_path|lower }}

# Change working directory when tree walking (if true)
change_cwd = {{ default_config.change_cwd|lower }}

# Crash when templates use undefined variables (if true)
strict_undefined = {{ default_config.strict_undefined|lower }}

# Disable embedded jinja extensions (if true)
# List of embedded jinja extensions (for information only):
{% for x in embedded_jinja_extensions -%}
# - {{x}}
{% endfor -%}
disable_embedded_jinja_extensions = {{ default_config.disable_embedded_jinja_extensions|lower }}

# Jinja extensions to add (full paths)
# Notes: 
# - jinja-tree provides embedded extensions which will be added automatically to this list
# - you can disable embedded extensions with 'disable_embedded_jinja_extensions = true'
jinja_extensions = []

# Context plugin full classpaths
context_plugins = [{{ default_config.context_plugins|map('double_quotes')|join(', ') }}]

# Generated comment template: line1 for context
# Available placeholders: {% raw %}{{utcnow}}, {{absolute_path}}, {{dirname}}, {{basename}}, {{relative_filepath}}{% endraw %}
context_generated_comment_line1 = "{{default_config.context_generated_comment_line1}}"

# Generated comment template: line2 for context
# Available placeholders: {% raw %}{{utcnow}}, {{absolute_path}}, {{dirname}}, {{basename}}, {{relative_filepath}}{% endraw %}
context_generated_comment_line2 = "{{default_config.context_generated_comment_line2}}"

# Action plugin full classpaths
action_plugins = [{{ default_config.action_plugins|map('double_quotes')|join(', ') }}]


######################################
### Context plugins configurations ###
######################################
[context.env]

# Fnmatch patterns (for environment variable names) to ignore
# Example: ["FOO*", "*BAR"]  for ignoring all env var starting with FOO or ending with BAR
ignores = [{{ ENV_CONTEXT_ADAPTER_DEFAULT_IGNORES|map('double_quotes')|join(', ') }}]

[context.dotenv]

# dotenv file path (absolute or relative), if set to an empty string (""), dotenv support is disabled 
path = "{{ DOTENV_CONTEXT_ADAPTER_DEFAULT_PATH }}"

# Fnmatch patterns (for dotenv variable names) to ignore
# Example: ["FOO*", "*BAR"]  for ignoring all dotenv var starting with FOO or ending with BAR
ignores = [{{ DOTENV_CONTEXT_ADAPTER_DEFAULT_IGNORES|map('double_quotes')|join(', ') }}]

[context.config]

# With the ConfigurationContextAdapter plugin, you can add key/values below, they will be available in Jinja2 context

# [...]


##########################################  
### File-action plugins configurations ###
##########################################
[action.extension]

# File extensions to process
# Example: [".j2", ".jinja2", ".template"] for processing all files ending with .j2, .jinja2 or .template
extensions = [{{ DEFAULT_EXTENSIONS|map('double_quotes')|join(', ') }}]

# Filename patterns to ignore (fnmatch patterns to match against basename only)
filename_ignores = [ {{ FILENAME_IGNORES_DEFAULT|map('double_quotes')|join(', ') }} ]

# Dirname patterns to ignore recursively (fnmatch patterns to match against dirname only)
dirname_ignores =  [ {{ DIRNAME_IGNORES_DEFAULT|map('double_quotes')|join(', ') }} ]

# Replace target files if they already exist (if true)
replace = {{ REPLACE_DEFAULT|lower }}

# Delete original (template) file after processing (if true)
delete_original = {{ DELETE_ORIGINAL_DEFAULT|lower }}